{"ast":null,"code":"var _jsxFileName = \"/Users/ankurj/Desktop/Personal/react-cognito/src/contexts/productContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\"; // import { ProductData, TProductData } from \"../mockup/ProductData\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  proData: [],\n  setPrices: (id, price) => {},\n  setAction: () => {},\n  total: 0,\n  isAction: true\n};\nexport const ProductContext = /*#__PURE__*/createContext(initialValue);\nexport const ProductProvider = ({\n  children\n}) => {\n  _s();\n\n  const [proData, _setProData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [isAction, setIsAction] = useState(true);\n\n  const setAction = () => setIsAction(!isAction);\n\n  const setPrices = (id, price) => {\n    let filtered = proData.filter(product => product.productId === id);\n    proData[proData.indexOf(filtered[0])].totalPrice = price;\n\n    _setProData(proData);\n  };\n\n  useEffect(() => {}, []);\n  useEffect(() => {\n    let sum = 0;\n    proData.map(product => {\n      sum += product.totalPrice;\n    });\n    setTotal(sum);\n  }, [isAction]);\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      proData,\n      setPrices,\n      total,\n      isAction,\n      setAction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductProvider, \"ZNrTjKEJMqgutbSV5xCwoMsrwLw=\");\n\n_c = ProductProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/Users/ankurj/Desktop/Personal/react-cognito/src/contexts/productContext.tsx"],"names":["createContext","useEffect","useState","initialValue","proData","setPrices","id","price","setAction","total","isAction","ProductContext","ProductProvider","children","_setProData","setTotal","setIsAction","filtered","filter","product","productId","indexOf","totalPrice","sum","map"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD,C,CACA;;;AAoBA,MAAMC,YAA6B,GAAG;AAClCC,EAAAA,OAAO,EAAE,EADyB;AAElCC,EAAAA,SAAS,EAAE,CAACC,EAAD,EAAaC,KAAb,KAA8B,CAAE,CAFT;AAGlCC,EAAAA,SAAS,EAAE,MAAM,CAAE,CAHe;AAIlCC,EAAAA,KAAK,EAAE,CAJ2B;AAKlCC,EAAAA,QAAQ,EAAE;AALwB,CAAtC;AAQA,OAAO,MAAMC,cAAc,gBAAGX,aAAa,CAACG,YAAD,CAApC;AACP,OAAO,MAAMS,eAAwC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAEpE,QAAM,CAACT,OAAD,EAAUU,WAAV,IAAyBZ,QAAQ,CAAa,EAAb,CAAvC;AACA,QAAM,CAACO,KAAD,EAAQM,QAAR,IAAoBb,QAAQ,CAAS,CAAT,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAUM,WAAV,IAAyBd,QAAQ,CAAU,IAAV,CAAvC;;AACA,QAAMM,SAAS,GAAG,MAAMQ,WAAW,CAAC,CAACN,QAAF,CAAnC;;AACA,QAAML,SAAS,GAAG,CAACC,EAAD,EAAaC,KAAb,KAA+B;AAC7C,QAAIU,QAAoB,GAAGb,OAAO,CAACc,MAAR,CAAgBC,OAAD,IAAaA,OAAO,CAACC,SAAR,KAAsBd,EAAlD,CAA3B;AACAF,IAAAA,OAAO,CAACA,OAAO,CAACiB,OAAR,CAAgBJ,QAAQ,CAAC,CAAD,CAAxB,CAAD,CAAP,CAAsCK,UAAtC,GAAmDf,KAAnD;;AACAO,IAAAA,WAAW,CAACV,OAAD,CAAX;AACH,GAJD;;AAMAH,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,EAFO,CAAT;AAIAA,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIsB,GAAG,GAAG,CAAV;AACAnB,IAAAA,OAAO,CAACoB,GAAR,CAAaL,OAAD,IAAa;AACrBI,MAAAA,GAAG,IAAIJ,OAAO,CAACG,UAAf;AACH,KAFD;AAGAP,IAAAA,QAAQ,CAACQ,GAAD,CAAR;AACH,GANQ,EAMP,CAACb,QAAD,CANO,CAAT;AAQA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHN,MAAAA,OADG;AAEHC,MAAAA,SAFG;AAGHI,MAAAA,KAHG;AAIHC,MAAAA,QAJG;AAKHF,MAAAA;AALG,KADX;AAAA,cASKK;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CArCM;;GAAMD,e;;KAAAA,e","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n// import { ProductData, TProductData } from \"../mockup/ProductData\";\n\nexport type TProduct = {\n    productId: string;\n    productName: string;\n    productDescription: string;\n    productPrice: number;\n    productCount: number;\n    totalPrice: number;\n}\n\nexport type TProductContext = {\n    proData: TProduct[];\n    total: number;\n    setPrices: (id: string, price: number) => void;\n    isAction: boolean;\n    setAction: () => void;\n};\n\n\nconst initialValue: TProductContext = {\n    proData: [],\n    setPrices: (id: string, price:number) => {},\n    setAction: () => {},\n    total: 0,\n    isAction: true,\n};\n\nexport const ProductContext = createContext(initialValue);\nexport const ProductProvider: React.FunctionComponent = ({children}) => {\n     \n    const [proData, _setProData] = useState<TProduct[]>([]);\n    const [total, setTotal] = useState<number>(0);\n    const [isAction,setIsAction] = useState<boolean>(true);\n    const setAction = () => setIsAction(!isAction);\n    const setPrices = (id: string, price: number) => {\n        let filtered: TProduct[] = proData.filter((product) => product.productId === id );\n        proData[proData.indexOf(filtered[0])].totalPrice = price;\n        _setProData(proData);\n    };\n\n    useEffect(()=>{\n      \n    },[]);\n    \n    useEffect(()=>{\n        let sum = 0;\n        proData.map((product) => {\n            sum += product.totalPrice;\n        })\n        setTotal(sum);\n    },[isAction]);\n\n    return (\n        <ProductContext.Provider \n            value={{\n                proData,\n                setPrices,\n                total,\n                isAction,\n                setAction,\n            }}\n        >\n            {children}\n        </ProductContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}