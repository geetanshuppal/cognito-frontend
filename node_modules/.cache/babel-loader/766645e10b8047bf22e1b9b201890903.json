{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nexport const useValidEmail = initialValue => {\n  _s();\n\n  const [email, setEmail] = useState(initialValue);\n  const [emailIsValid, setEmailIsValid] = useState(true);\n  useEffect(() => {\n    const emailSchema = yup.object().shape({\n      email: yup.string().email().required()\n    });\n\n    if (email.length === 0) {\n      setEmailIsValid(true);\n      return;\n    }\n\n    const isValid = emailSchema.isValidSync({\n      email\n    });\n    setEmailIsValid(isValid);\n  }, [email]);\n  return {\n    email,\n    setEmail,\n    emailIsValid\n  };\n};\n\n_s(useValidEmail, \"S0Af0J+X8xSy+do62RT544m9emw=\");\n\nexport const useValidPassword = initialValue => {\n  _s2();\n\n  const [password, setPassword] = useState(initialValue);\n  const [passwordIsValid, setPasswordIsValid] = useState(true);\n  useEffect(() => {\n    const passwordSchema = yup.object().shape({\n      password: yup.string().min(8).required()\n    });\n\n    if (password.length === 0) {\n      setPasswordIsValid(true);\n      return;\n    }\n\n    const isValid = passwordSchema.isValidSync({\n      password\n    });\n    setPasswordIsValid(isValid);\n  }, [password]);\n  return {\n    password,\n    setPassword,\n    passwordIsValid\n  };\n};\n\n_s2(useValidPassword, \"IUTaPLB3pWnoWGu30gAGk4/3gPc=\");\n\nexport const useValidUsername = initialValue => {\n  _s3();\n\n  const [username, setUsername] = useState(initialValue);\n  const [usernameIsValid, setUsernameIsValid] = useState(true);\n  useEffect(() => {\n    const usernameSchema = yup.object().shape({\n      username: yup.string().min(8).required()\n    });\n\n    if (username.length === 0) {\n      setUsernameIsValid(true);\n      return;\n    }\n\n    const isValid = usernameSchema.isValidSync({\n      username\n    });\n    setUsernameIsValid(isValid);\n  }, [username]);\n  return {\n    username,\n    setUsername,\n    usernameIsValid\n  };\n};\n\n_s3(useValidUsername, \"WM2ZnmrM5eKn+H4M8XJ+z4MDtoA=\");\n\nexport const useValidCode = initialValue => {\n  _s4();\n\n  const [code, setCode] = useState(initialValue);\n  const [codeIsValid, setCodeIsValid] = useState(true);\n  useEffect(() => {\n    const codeSchema = yup.object().shape({\n      code: yup.string().min(6).required()\n    });\n\n    if (code.length === 0) {\n      setCodeIsValid(true);\n      return;\n    }\n\n    const isValid = codeSchema.isValidSync({\n      code\n    });\n    setCodeIsValid(isValid);\n  }, [code]);\n  return {\n    code,\n    setCode,\n    codeIsValid\n  };\n};\n\n_s4(useValidCode, \"GXu8IowK+uOU8LCtDBdmAGwvqaI=\");","map":{"version":3,"sources":["/Users/ankurj/Desktop/Personal/react-cognito/src/hooks/useAuthHooks.tsx"],"names":["useState","useEffect","yup","useValidEmail","initialValue","email","setEmail","emailIsValid","setEmailIsValid","emailSchema","object","shape","string","required","length","isValid","isValidSync","useValidPassword","password","setPassword","passwordIsValid","setPasswordIsValid","passwordSchema","min","useValidUsername","username","setUsername","usernameIsValid","setUsernameIsValid","usernameSchema","useValidCode","code","setCode","codeIsValid","setCodeIsValid","codeSchema"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport * as yup from 'yup'\n\nexport const useValidEmail = (initialValue: string) => {\n  const [email, setEmail] = useState(initialValue)\n  const [emailIsValid, setEmailIsValid] = useState(true)\n\n  useEffect(() => {\n    const emailSchema = yup.object().shape({\n      email: yup.string().email().required(),\n    })\n\n    if (email.length === 0) {\n      setEmailIsValid(true)\n      return\n    }\n\n    const isValid = emailSchema.isValidSync({ email })\n\n    setEmailIsValid(isValid)\n  }, [email])\n\n  return { email, setEmail, emailIsValid }\n}\n\nexport const useValidPassword = (initialValue: string) => {\n  const [password, setPassword] = useState(initialValue)\n  const [passwordIsValid, setPasswordIsValid] = useState(true)\n\n  useEffect(() => {\n    const passwordSchema = yup.object().shape({\n      password: yup.string().min(8).required(),\n    })\n\n    if (password.length === 0) {\n      setPasswordIsValid(true)\n      return\n    }\n\n    const isValid = passwordSchema.isValidSync({ password })\n\n    setPasswordIsValid(isValid)\n  }, [password])\n\n  return { password, setPassword, passwordIsValid }\n}\n\nexport const useValidUsername = (initialValue: string) => {\n  const [username, setUsername] = useState(initialValue)\n  const [usernameIsValid, setUsernameIsValid] = useState(true)\n\n  useEffect(() => {\n    const usernameSchema = yup.object().shape({\n      username: yup.string().min(8).required(),\n    })\n\n    if (username.length === 0) {\n      setUsernameIsValid(true)\n      return\n    }\n\n    const isValid = usernameSchema.isValidSync({ username })\n\n    setUsernameIsValid(isValid)\n  }, [username])\n\n  return { username, setUsername, usernameIsValid }\n}\n\nexport const useValidCode = (initialValue: string) => {\n  const [code, setCode] = useState(initialValue)\n  const [codeIsValid, setCodeIsValid] = useState(true)\n\n  useEffect(() => {\n    const codeSchema = yup.object().shape({\n      code: yup.string().min(6).required(),\n    })\n\n    if (code.length === 0) {\n      setCodeIsValid(true)\n      return\n    }\n\n    const isValid = codeSchema.isValidSync({ code })\n\n    setCodeIsValid(isValid)\n  }, [code])\n\n  return { code, setCode, codeIsValid }\n}\n"]},"metadata":{},"sourceType":"module"}