{"ast":null,"code":"import { AuthenticationDetails, CognitoUser, CognitoUserAttribute, CognitoUserPool } from 'amazon-cognito-identity-js';\nconst userPoolId = process.env.REACT_APP_USERPOOL_ID;\nconst clientId = process.env.REACT_APP_CLIENT_ID;\nconsole.log(`userpool id=${userPoolId}`);\nconsole.log(`client id=${clientId}`);\nconst poolData = {\n  UserPoolId: `${userPoolId}`,\n  ClientId: `${clientId}`\n};\nconst userPool = new CognitoUserPool(poolData);\nlet currentUser = userPool.getCurrentUser();\nexport function getCurrentUser() {\n  return currentUser;\n}\n\nfunction getCognitoUser(username) {\n  const userData = {\n    Username: username,\n    Pool: userPool\n  };\n  const cognitoUser = new CognitoUser(userData);\n  return cognitoUser;\n}\n\nexport async function getSession() {\n  if (!currentUser) {\n    currentUser = userPool.getCurrentUser();\n  }\n\n  return new Promise(function (resolve, reject) {\n    currentUser.getSession(function (err, session) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(session);\n      }\n    });\n  }).catch(err => {\n    throw err;\n  });\n}\nexport async function signUpUserWithEmail(username, email, password) {\n  return new Promise(function (resolve, reject) {\n    const attributeList = [new CognitoUserAttribute({\n      Name: 'email',\n      Value: email\n    })];\n    userPool.signUp(username, password, attributeList, [], function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  }).catch(err => {\n    throw err;\n  });\n}\nexport async function verifyCode(username, code) {\n  return new Promise(function (resolve, reject) {\n    const cognitoUser = getCognitoUser(username);\n    cognitoUser.confirmRegistration(code, true, function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    });\n  }).catch(err => {\n    throw err;\n  });\n}\nexport async function signInWithEmail(username, password) {\n  return new Promise(function (resolve, reject) {\n    const authenticationData = {\n      Username: username,\n      Password: password\n    };\n    const authenticationDetails = new AuthenticationDetails(authenticationData);\n    currentUser = getCognitoUser(username);\n    currentUser.authenticateUser(authenticationDetails, {\n      onSuccess: function (res) {\n        resolve(res);\n      },\n      onFailure: function (err) {\n        reject(err);\n      }\n    });\n  }).catch(err => {\n    throw err;\n  });\n}\nexport function signOut() {\n  if (currentUser) {\n    currentUser.signOut();\n  }\n}\nexport async function getAttributes() {\n  return new Promise(function (resolve, reject) {\n    currentUser.getUserAttributes(function (err, attributes) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(attributes);\n      }\n    });\n  }).catch(err => {\n    throw err;\n  });\n}\nexport async function setAttribute(attribute) {\n  return new Promise(function (resolve, reject) {\n    const attributeList = [];\n    const res = new CognitoUserAttribute(attribute);\n    attributeList.push(res);\n    currentUser.updateAttributes(attributeList, (err, res) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  }).catch(err => {\n    throw err;\n  });\n}\nexport async function sendCode(username) {\n  return new Promise(function (resolve, reject) {\n    const cognitoUser = getCognitoUser(username);\n\n    if (!cognitoUser) {\n      reject(`could not find ${username}`);\n      return;\n    }\n\n    cognitoUser.forgotPassword({\n      onSuccess: function (res) {\n        resolve(res);\n      },\n      onFailure: function (err) {\n        reject(err);\n      }\n    });\n  }).catch(err => {\n    throw err;\n  });\n}\nexport async function forgotPassword(username, code, password) {\n  return new Promise(function (resolve, reject) {\n    const cognitoUser = getCognitoUser(username);\n\n    if (!cognitoUser) {\n      reject(`could not find ${username}`);\n      return;\n    }\n\n    cognitoUser.confirmPassword(code, password, {\n      onSuccess: function () {\n        resolve('password updated');\n      },\n      onFailure: function (err) {\n        reject(err);\n      }\n    });\n  });\n}\nexport async function changePassword(oldPassword, newPassword) {\n  return new Promise(function (resolve, reject) {\n    currentUser.changePassword(oldPassword, newPassword, function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/ankurj/Desktop/Personal/react-cognito/src/libs/cognito.ts"],"names":["AuthenticationDetails","CognitoUser","CognitoUserAttribute","CognitoUserPool","userPoolId","process","env","REACT_APP_USERPOOL_ID","clientId","REACT_APP_CLIENT_ID","console","log","poolData","UserPoolId","ClientId","userPool","currentUser","getCurrentUser","getCognitoUser","username","userData","Username","Pool","cognitoUser","getSession","Promise","resolve","reject","err","session","catch","signUpUserWithEmail","email","password","attributeList","Name","Value","signUp","res","verifyCode","code","confirmRegistration","result","signInWithEmail","authenticationData","Password","authenticationDetails","authenticateUser","onSuccess","onFailure","signOut","getAttributes","getUserAttributes","attributes","setAttribute","attribute","push","updateAttributes","sendCode","forgotPassword","confirmPassword","changePassword","oldPassword","newPassword"],"mappings":"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","sourcesContent":["import { AuthenticationDetails, CognitoUser, CognitoUserAttribute, CognitoUserPool } from 'amazon-cognito-identity-js'\n\nconst userPoolId = process.env.REACT_APP_USERPOOL_ID\nconst clientId = process.env.REACT_APP_CLIENT_ID\n\nconsole.log(`userpool id=${userPoolId}`)\nconsole.log(`client id=${clientId}`)\n\nconst poolData = {\n  UserPoolId: `${userPoolId}`,\n  ClientId: `${clientId}`,\n}\n\nconst userPool: CognitoUserPool = new CognitoUserPool(poolData)\n\nlet currentUser: any = userPool.getCurrentUser()\n\nexport function getCurrentUser() {\n  return currentUser\n}\n\nfunction getCognitoUser(username: string) {\n  const userData = {\n    Username: username,\n    Pool: userPool,\n  }\n  const cognitoUser = new CognitoUser(userData)\n\n  return cognitoUser\n}\n\nexport async function getSession() {\n  if (!currentUser) {\n    currentUser = userPool.getCurrentUser()\n  }\n\n  return new Promise(function (resolve, reject) {\n    currentUser.getSession(function (err: any, session: any) {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(session)\n      }\n    })\n  }).catch((err) => {\n    throw err\n  })\n}\n\nexport async function signUpUserWithEmail(username: string, email: string, password: string) {\n  return new Promise(function (resolve, reject) {\n    const attributeList = [\n      new CognitoUserAttribute({\n        Name: 'email',\n        Value: email,\n      }),\n    ]\n\n    userPool.signUp(username, password, attributeList, [], function (err, res) {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(res)\n      }\n    })\n  }).catch((err) => {\n    throw err\n  })\n}\n\nexport async function verifyCode(username: string, code: string) {\n  return new Promise(function (resolve, reject) {\n    const cognitoUser = getCognitoUser(username)\n\n    cognitoUser.confirmRegistration(code, true, function (err, result) {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(result)\n      }\n    })\n  }).catch((err) => {\n    throw err\n  })\n}\n\nexport async function signInWithEmail(username: string, password: string) {\n  return new Promise(function (resolve, reject) {\n    const authenticationData = {\n      Username: username,\n      Password: password,\n    }\n    const authenticationDetails = new AuthenticationDetails(authenticationData)\n\n    currentUser = getCognitoUser(username)\n\n    currentUser.authenticateUser(authenticationDetails, {\n      onSuccess: function (res: any) {\n        resolve(res)\n      },\n      onFailure: function (err: any) {\n        reject(err)\n      },\n    })\n  }).catch((err) => {\n    throw err\n  })\n}\n\nexport function signOut() {\n  if (currentUser) {\n    currentUser.signOut()\n  }\n}\n\nexport async function getAttributes() {\n  return new Promise(function (resolve, reject) {\n    currentUser.getUserAttributes(function (err: any, attributes: any) {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(attributes)\n      }\n    })\n  }).catch((err) => {\n    throw err\n  })\n}\n\nexport async function setAttribute(attribute: any) {\n  return new Promise(function (resolve, reject) {\n    const attributeList = []\n    const res = new CognitoUserAttribute(attribute)\n    attributeList.push(res)\n\n    currentUser.updateAttributes(attributeList, (err: any, res: any) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(res)\n      }\n    })\n  }).catch((err) => {\n    throw err\n  })\n}\n\nexport async function sendCode(username: string) {\n  return new Promise(function (resolve, reject) {\n    const cognitoUser = getCognitoUser(username)\n\n    if (!cognitoUser) {\n      reject(`could not find ${username}`)\n      return\n    }\n\n    cognitoUser.forgotPassword({\n      onSuccess: function (res) {\n        resolve(res)\n      },\n      onFailure: function (err) {\n        reject(err)\n      },\n    })\n  }).catch((err) => {\n    throw err\n  })\n}\n\nexport async function forgotPassword(username: string, code: string, password: string) {\n  return new Promise(function (resolve, reject) {\n    const cognitoUser = getCognitoUser(username)\n\n    if (!cognitoUser) {\n      reject(`could not find ${username}`)\n      return\n    }\n\n    cognitoUser.confirmPassword(code, password, {\n      onSuccess: function () {\n        resolve('password updated')\n      },\n      onFailure: function (err) {\n        reject(err)\n      },\n    })\n  })\n}\n\nexport async function changePassword(oldPassword: string, newPassword: string) {\n  return new Promise(function (resolve, reject) {\n    currentUser.changePassword(oldPassword, newPassword, function (err: any, res: any) {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(res)\n      }\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"module"}