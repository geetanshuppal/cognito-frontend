{"ast":null,"code":"var _jsxFileName = \"/Users/ankurj/Desktop/Personal/react-cognito/src/contexts/authContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport * as cognito from '../libs/cognito';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let AuthStatus;\n\n(function (AuthStatus) {\n  AuthStatus[AuthStatus[\"Loading\"] = 0] = \"Loading\";\n  AuthStatus[AuthStatus[\"SignedIn\"] = 1] = \"SignedIn\";\n  AuthStatus[AuthStatus[\"SignedOut\"] = 2] = \"SignedOut\";\n})(AuthStatus || (AuthStatus = {}));\n\nconst defaultState = {\n  sessionInfo: {},\n  authStatus: AuthStatus.Loading\n};\nexport const AuthContext = /*#__PURE__*/React.createContext(defaultState);\nexport const AuthIsSignedIn = ({\n  children\n}) => {\n  _s();\n\n  const {\n    authStatus\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: authStatus === AuthStatus.SignedIn ? children : null\n  }, void 0, false);\n};\n\n_s(AuthIsSignedIn, \"LGtYND9TVslq8MAyFJTuBfxCIHg=\");\n\n_c = AuthIsSignedIn;\nexport const AuthIsNotSignedIn = ({\n  children\n}) => {\n  _s2();\n\n  const {\n    authStatus\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: authStatus === AuthStatus.SignedOut ? children : null\n  }, void 0, false);\n};\n\n_s2(AuthIsNotSignedIn, \"LGtYND9TVslq8MAyFJTuBfxCIHg=\");\n\n_c2 = AuthIsNotSignedIn;\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s3();\n\n  const [authStatus, setAuthStatus] = useState(AuthStatus.Loading);\n  const [sessionInfo, setSessionInfo] = useState({});\n  const [attrInfo, setAttrInfo] = useState([]);\n  useEffect(() => {\n    async function getSessionInfo() {\n      try {\n        const session = await getSession();\n        setSessionInfo({\n          accessToken: session.accessToken.jwtToken,\n          refreshToken: session.refreshToken.token\n        });\n        window.localStorage.setItem('accessToken', `${session.accessToken.jwtToken}`);\n        window.localStorage.setItem('refreshToken', `${session.refreshToken.token}`);\n        await setAttribute({\n          Name: 'website',\n          Value: 'https://github.com/dbroadhurst/aws-cognito-react'\n        });\n        const attr = await getAttributes();\n        setAttrInfo(attr);\n        setAuthStatus(AuthStatus.SignedIn);\n      } catch (err) {\n        setAuthStatus(AuthStatus.SignedOut);\n      }\n    }\n\n    getSessionInfo();\n  }, [setAuthStatus, authStatus]);\n\n  if (authStatus === AuthStatus.Loading) {\n    return null;\n  }\n\n  async function signInWithEmail(username, password) {\n    try {\n      await cognito.signInWithEmail(username, password);\n      setAuthStatus(AuthStatus.SignedIn);\n    } catch (err) {\n      setAuthStatus(AuthStatus.SignedOut);\n      throw err;\n    }\n  }\n\n  async function signUpWithEmail(username, email, password) {\n    try {\n      await cognito.signUpUserWithEmail(username, email, password);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  function signOut() {\n    cognito.signOut();\n    setAuthStatus(AuthStatus.SignedOut);\n  }\n\n  async function verifyCode(username, code) {\n    try {\n      await cognito.verifyCode(username, code);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async function getSession() {\n    try {\n      const session = await cognito.getSession();\n      return session;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async function getAttributes() {\n    try {\n      const attr = await cognito.getAttributes();\n      return attr;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async function setAttribute(attr) {\n    try {\n      const res = await cognito.setAttribute(attr);\n      return res;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async function sendCode(username) {\n    try {\n      await cognito.sendCode(username);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async function forgotPassword(username, code, password) {\n    try {\n      await cognito.forgotPassword(username, code, password);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async function changePassword(oldPassword, newPassword) {\n    try {\n      await cognito.changePassword(oldPassword, newPassword);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  const state = {\n    authStatus,\n    sessionInfo,\n    attrInfo,\n    signUpWithEmail,\n    signInWithEmail,\n    signOut,\n    verifyCode,\n    getSession,\n    sendCode,\n    forgotPassword,\n    changePassword,\n    getAttributes,\n    setAttribute\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 10\n  }, this);\n};\n\n_s3(AuthProvider, \"KloQnJaK4p003IWwrmNDym11WwA=\");\n\n_c3 = AuthProvider;\nexport default AuthProvider;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AuthIsSignedIn\");\n$RefreshReg$(_c2, \"AuthIsNotSignedIn\");\n$RefreshReg$(_c3, \"AuthProvider\");","map":{"version":3,"sources":["/Users/ankurj/Desktop/Personal/react-cognito/src/contexts/authContext.tsx"],"names":["React","useState","useEffect","useContext","cognito","AuthStatus","defaultState","sessionInfo","authStatus","Loading","AuthContext","createContext","AuthIsSignedIn","children","SignedIn","AuthIsNotSignedIn","SignedOut","AuthProvider","setAuthStatus","setSessionInfo","attrInfo","setAttrInfo","getSessionInfo","session","getSession","accessToken","jwtToken","refreshToken","token","window","localStorage","setItem","setAttribute","Name","Value","attr","getAttributes","err","signInWithEmail","username","password","signUpWithEmail","email","signUpUserWithEmail","signOut","verifyCode","code","res","sendCode","forgotPassword","changePassword","oldPassword","newPassword","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\n\nimport * as cognito from '../libs/cognito'\n\nexport enum AuthStatus {\n  Loading,\n  SignedIn,\n  SignedOut,\n}\n\nexport interface IAuth {\n  sessionInfo?: { username?: string; email?: string; sub?: string; accessToken?: string; refreshToken?: string }\n  attrInfo?: any\n  authStatus?: AuthStatus\n  signInWithEmail?: any\n  signUpWithEmail?: any\n  signOut?: any\n  verifyCode?: any\n  getSession?: any\n  sendCode?: any\n  forgotPassword?: any\n  changePassword?: any\n  getAttributes?: any\n  setAttribute?: any\n}\n\nconst defaultState: IAuth = {\n  sessionInfo: {},\n  authStatus: AuthStatus.Loading,\n}\n\nexport const AuthContext = React.createContext(defaultState)\n\nexport const AuthIsSignedIn: React.FunctionComponent = ({ children }) => {\n  const { authStatus }: IAuth = useContext(AuthContext)\n\n  return <>{authStatus === AuthStatus.SignedIn ? children : null}</>\n}\n\nexport const AuthIsNotSignedIn: React.FunctionComponent = ({ children }) => {\n  const { authStatus }: IAuth = useContext(AuthContext)\n\n  return <>{authStatus === AuthStatus.SignedOut ? children : null}</>\n}\n\nconst AuthProvider: React.FunctionComponent = ({ children }) => {\n  const [authStatus, setAuthStatus] = useState(AuthStatus.Loading)\n  const [sessionInfo, setSessionInfo] = useState({})\n  const [attrInfo, setAttrInfo] = useState([])\n\n  useEffect(() => {\n    async function getSessionInfo() {\n      try {\n        const session: any = await getSession()\n        setSessionInfo({\n          accessToken: session.accessToken.jwtToken,\n          refreshToken: session.refreshToken.token,\n        })\n        window.localStorage.setItem('accessToken', `${session.accessToken.jwtToken}`)\n        window.localStorage.setItem('refreshToken', `${session.refreshToken.token}`)\n        await setAttribute({ Name: 'website', Value: 'https://github.com/dbroadhurst/aws-cognito-react' })\n        const attr: any = await getAttributes()\n        setAttrInfo(attr)\n        setAuthStatus(AuthStatus.SignedIn)\n      } catch (err) {\n        setAuthStatus(AuthStatus.SignedOut)\n      }\n    }\n    getSessionInfo()\n  }, [setAuthStatus, authStatus])\n\n  if (authStatus === AuthStatus.Loading) {\n    return null\n  }\n\n  async function signInWithEmail(username: string, password: string) {\n    try {\n      await cognito.signInWithEmail(username, password)\n      setAuthStatus(AuthStatus.SignedIn)\n    } catch (err) {\n      setAuthStatus(AuthStatus.SignedOut)\n      throw err\n    }\n  }\n\n  async function signUpWithEmail(username: string, email: string, password: string) {\n    try {\n      await cognito.signUpUserWithEmail(username, email, password)\n    } catch (err) {\n      throw err\n    }\n  }\n\n  function signOut() {\n    cognito.signOut()\n    setAuthStatus(AuthStatus.SignedOut)\n  }\n\n  async function verifyCode(username: string, code: string) {\n    try {\n      await cognito.verifyCode(username, code)\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async function getSession() {\n    try {\n      const session = await cognito.getSession()\n      return session\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async function getAttributes() {\n    try {\n      const attr = await cognito.getAttributes()\n      return attr\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async function setAttribute(attr: any) {\n    try {\n      const res = await cognito.setAttribute(attr)\n      return res\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async function sendCode(username: string) {\n    try {\n      await cognito.sendCode(username)\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async function forgotPassword(username: string, code: string, password: string) {\n    try {\n      await cognito.forgotPassword(username, code, password)\n    } catch (err) {\n      throw err\n    }\n  }\n\n  async function changePassword(oldPassword: string, newPassword: string) {\n    try {\n      await cognito.changePassword(oldPassword, newPassword)\n    } catch (err) {\n      throw err\n    }\n  }\n\n  const state: IAuth = {\n    authStatus,\n    sessionInfo,\n    attrInfo,\n    signUpWithEmail,\n    signInWithEmail,\n    signOut,\n    verifyCode,\n    getSession,\n    sendCode,\n    forgotPassword,\n    changePassword,\n    getAttributes,\n    setAttribute,\n  }\n\n  return <AuthContext.Provider value={state}>{children}</AuthContext.Provider>\n}\n\nexport default AuthProvider\n"]},"metadata":{},"sourceType":"module"}